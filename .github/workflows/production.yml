name: Production Release Workflow

on:
  pull_request:
    types: [closed]
    branches:
      - main
      - master

jobs:
  tag-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      attestations: write
      id-token: write

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract version from branch name
      id: extract_version
      run: echo "VERSION=${GITHUB_HEAD_REF#release/}" >> $GITHUB_ENV

    - name: Create Git Tag
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "actions@github.com"
        git tag -a "v${{ env.VERSION }}" -m "Release version ${{ env.VERSION }}"
        git push origin "v${{ env.VERSION }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: v${{ env.VERSION }}
        draft: false
        prerelease: false

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      with:
        context: ./dvna
        file: ./dvna/Dockerfile-dev
        push: true
        tags: |
          ${{ vars.DOCKER_NAMESPACE }}/${{ vars.DOCKER_REPOSITORY }}:${{ env.VERSION }}
          ${{ vars.DOCKER_NAMESPACE }}/${{ vars.DOCKER_REPOSITORY }}:latest
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: docker.io/${{ vars.DOCKER_NAMESPACE }}/${{ vars.DOCKER_REPOSITORY}}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true